{"version":3,"file":"static/js/4245.0b923e13.chunk.js","mappings":"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","sources":["pages/CMS/Template/Create.tsx","utils/common.ts"],"sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup'\nimport SaveIcon from '@mui/icons-material/Save'\nimport { LoadingButton } from '@mui/lab'\nimport { Autocomplete, Box, Stack, TextField, Typography } from '@mui/material'\nimport { TemplateApi } from 'API/CMS/template'\nimport { useEffect, useRef, useState } from 'react'\nimport { SubmitHandler, useForm } from 'react-hook-form'\nimport { useNavigate } from 'react-router-dom'\nimport { useAppDispatch, useAppSelector } from 'redux/hooks'\nimport { getThemes } from 'redux/slices/CMS/Theme'\nimport { UIAction } from 'redux/slices/UI'\nimport { getGeneratedBlobHtml } from 'utils/common'\nimport * as yup from 'yup'\ninterface FormInput {\n\tthemeId: number\n\tname: string\n\tbody: string\n}\nexport default function Create() {\n\tconst nav = useNavigate()\n\tconst [loading, setLoading] = useState(false)\n\tconst list = useAppSelector((s) => s.CMS.Template.list)\n\tconst [createdId, setCreatedId] = useState(0)\n\tconst dispatch = useAppDispatch()\n\tuseEffect(() => {\n\t\tif (list.find((f) => f.id === createdId)) {\n\t\t\tnav(`/cms/template/${createdId}`)\n\t\t}\n\t}, [createdId, list, nav])\n\tconst schema = yup.object({\n\t\tname: yup.string().required(),\n\t\tthemeId: yup.number().required().min(1),\n\t\tbody: yup.string().required(),\n\t})\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tsetValue,\n\t\tgetValues,\n\t\twatch,\n\t\tformState: { errors },\n\t} = useForm<FormInput>({\n\t\tresolver: yupResolver(schema),\n\t\tdefaultValues: {\n\t\t\tname: '',\n\t\t\tbody: '',\n\t\t\tthemeId: 0,\n\t\t},\n\t})\n\tconst themes = useAppSelector((s) => s.CMS.Theme.list)\n\tconst themeStatus = useAppSelector((s) => s.CMS.Theme.status)\n\tconst ref = useRef<HTMLIFrameElement>(null)\n\tuseEffect(() => {\n\t\tif (themeStatus === 'init') dispatch(getThemes())\n\t}, [dispatch, themeStatus])\n\n\tuseEffect(() => {\n\t\tconst subscription = watch((value, { name }) => {\n\t\t\tif (name === 'themeId') {\n\t\t\t\tconst themeId = value.themeId\n\t\t\t\tif (themeId) {\n\t\t\t\t\tconst theme = themes.find((f) => f.id === themeId)\n\t\t\t\t\tif (!theme) return\n\t\t\t\t\tsetValue('body', theme.body, {\n\t\t\t\t\t\tshouldValidate: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn () => subscription.unsubscribe()\n\t}, [watch, themes, setValue])\n\n\tconst theme = themes.find((f) => f.id === getValues('themeId'))\n\tconst onSubmit: SubmitHandler<FormInput> = async ({ name, body, themeId }) => {\n\t\ttry {\n\t\t\tsetLoading(true)\n\t\t\tconst ids = body.match(/(?<={block:)(\\d|\\w){13}(?=})/gm)\n\t\t\tif (!ids) {\n\t\t\t\treturn dispatch(\n\t\t\t\t\tUIAction.addGlobalMessage({\n\t\t\t\t\t\tmessage: 'テーマにUI編集所まだ入ってないので、ご確認ください',\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t}\n\t\t\tconst bodyObj = {}\n\t\t\tids.forEach((v) => {\n\t\t\t\tbodyObj[v] = ''\n\t\t\t})\n\t\t\tconst { id, message, error } = await TemplateApi.create({\n\t\t\t\tname,\n\t\t\t\tbody: bodyObj,\n\t\t\t\tthemeId,\n\t\t\t})\n\t\t\tdispatch(\n\t\t\t\tUIAction.addGlobalMessage({\n\t\t\t\t\ttype: error ? 'error' : 'success',\n\t\t\t\t\tmessage,\n\t\t\t\t})\n\t\t\t)\n\t\t\tid && setCreatedId(id)\n\t\t} finally {\n\t\t\tsetLoading(false)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Stack gap={1} component=\"form\" noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n\t\t\t<Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n\t\t\t\t<Typography\n\t\t\t\t\tcolor=\"primary.dark\"\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tfontWeight: 600,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tテンプレート作成\n\t\t\t\t</Typography>\n\t\t\t</Stack>\n\t\t\t{themes.length === 0 && <Typography color=\"red\">テーマが必要です</Typography>}\n\t\t\t<Stack gap={2} maxWidth=\"sm\" my={2}>\n\t\t\t\t<Autocomplete\n\t\t\t\t\tdisablePortal\n\t\t\t\t\toptions={[0, ...themes.map((v) => v.id)]}\n\t\t\t\t\tfullWidth\n\t\t\t\t\tgetOptionLabel={(t) => {\n\t\t\t\t\t\tlet label = ''\n\t\t\t\t\t\tif (t === 0) label = ''\n\t\t\t\t\t\telse label = themes.find((f) => f.id === t)?.name || ''\n\t\t\t\t\t\treturn label\n\t\t\t\t\t}}\n\t\t\t\t\tgetOptionDisabled={(t) => t === 0}\n\t\t\t\t\tvalue={getValues('themeId') || 0}\n\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\tlabel={'テーマ選択'}\n\t\t\t\t\t\t\tplaceholder=\"選択してください\"\n\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\terror={'themeId' in errors}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\tonChange={(_event, t) => {\n\t\t\t\t\t\tt && setValue('themeId', t, { shouldValidate: true })\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\tautoFocus\n\t\t\t\t\trequired\n\t\t\t\t\tlabel={'テンプレート名'}\n\t\t\t\t\tplaceholder=\"例：一般用\"\n\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t{...register('name')}\n\t\t\t\t\terror={'name' in errors}\n\t\t\t\t/>\n\t\t\t</Stack>\n\t\t\t<Box>\n\t\t\t\t<LoadingButton\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tdisabled={Object.keys(errors).length > 0 || themes.length === 0}\n\t\t\t\t\tloading={loading}\n\t\t\t\t\tloadingPosition=\"start\"\n\t\t\t\t\tstartIcon={<SaveIcon />}\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t>\n\t\t\t\t\t作成する\n\t\t\t\t</LoadingButton>\n\t\t\t</Box>\n\t\t\t<Box\n\t\t\t\tref={ref}\n\t\t\t\tcomponent=\"iframe\"\n\t\t\t\tsrcDoc={getGeneratedBlobHtml(\n\t\t\t\t\tgetValues('body').replace(\n\t\t\t\t\t\t/{block:(\\d|\\w){13}}/gm,\n\t\t\t\t\t\t`<p style=\"width:100%;\n\t\t\t\t\tpadding:10px;\n\t\t\t\t\tbackground : #eee;\n\t\t\t\t\tborder: 2px dotted #ccc;\n\t\t\t\t\ttext-align:center;\n\t\t\t\t\tfont-size: 2rem;\">編集箇所</p>`\n\t\t\t\t\t),\n\t\t\t\t\ttheme?.head || '',\n\t\t\t\t\ttheme?.style || ''\n\t\t\t\t)}\n\t\t\t\twidth=\"100%\"\n\t\t\t\theight=\"700px\"\n\t\t\t\tsx={{\n\t\t\t\t\tborder: '4px solid #3ac',\n\t\t\t\t\tborderRadius: '0.6rem',\n\t\t\t\t\tbackground: '#fff',\n\t\t\t\t}}\n\t\t\t></Box>\n\t\t</Stack>\n\t)\n}\n","import pretty from 'pretty'\nimport { CSSProperties } from 'react'\n\nexport function makeId(length = 10) {\n\tlet result = ''\n\tconst characters = 'abcdefghijklmnopqrstuvwxyz0123456789'\n\tconst charactersLength = characters.length\n\tlet counter = 0\n\twhile (counter < length) {\n\t\tif (counter === 0) result += characters.charAt(Math.floor(Math.random() * 26))\n\t\telse result += characters.charAt(Math.floor(Math.random() * charactersLength))\n\t\tcounter += 1\n\t}\n\treturn result\n}\n\nexport const getGeneratedBlobHtml = (html: string, head: string, css?: string) => {\n\tconst source = pretty(\n\t\t`\n\t<html lang=\"ja\">\n\t\t<head>\n\t\t\t${head}\n\t\t\t<style>\n\t\t\t\t${css || ''}\n\t\t\t</style>\n\t\t</head>\n\t\t<body>\n\t\t\t${html}\n\t\t</body>\n\t</html>\n`,\n\t\t{ ocd: true }\n\t)\n\n\treturn source\n}\n\nexport const setStyleCssToElm = (elm: HTMLElement, style: CSSProperties) => {\n\treturn Object.keys(style).forEach((key) => {\n\t\tconst k = key\n\t\t\t.split('')\n\t\t\t.map((s) => {\n\t\t\t\tif (s === s.toUpperCase()) {\n\t\t\t\t\treturn '-' + s.toLowerCase()\n\t\t\t\t}\n\t\t\t\treturn s\n\t\t\t})\n\t\t\t.join('')\n\t\telm.style[k] = style[key]\n\t})\n}\n/**\n *\n * @param ms millisecond time ex: 1000*60\n * @returns Promise<void>\n */\nexport const delay = (ms: number) => new Promise<void>((res) => setTimeout(res, ms))\n\nexport const getBodyObj = async () => {\n\tconst tmp = document.createElement('div')\n\ttmp.innerHTML = document.getElementById('edit-area')?.innerHTML || ''\n\tconst editable = tmp.querySelectorAll<HTMLElement>('[data-editable]')\n\n\tif (!editable) return\n\tconst bodyObj: {\n\t\t[key: string]: string\n\t} = {}\n\tawait delay(0)\n\n\teditable.forEach((elm) => {\n\t\tconst tmp = elm\n\t\tconst key = elm.dataset.editable!\n\t\ttmp.querySelectorAll('[data-block=\"left-actions\"],[data-block=\"bottom-actions\"]').forEach((elm) => {\n\t\t\telm.remove()\n\t\t})\n\t\tbodyObj[key] = tmp.outerHTML.replaceAll(/ contenteditable=\"true\"/g, '')\n\t})\n\treturn bodyObj\n}\n"],"names":["Create","nav","useNavigate","_useState","useState","_useState2","_slicedToArray","loading","setLoading","list","useAppSelector","s","CMS","Template","_useState3","_useState4","createdId","setCreatedId","dispatch","useAppDispatch","useEffect","find","f","id","concat","schema","yup","name","required","themeId","min","body","_useForm","useForm","resolver","yupResolver","defaultValues","register","handleSubmit","setValue","getValues","watch","errors","formState","themes","Theme","themeStatus","status","ref","useRef","getThemes","subscription","value","_ref","theme","shouldValidate","unsubscribe","onSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","ids","bodyObj","_yield$TemplateApi$cr","message","error","wrap","_context","prev","next","match","abrupt","UIAction","addGlobalMessage","type","forEach","v","TemplateApi","create","sent","finish","stop","_x","apply","arguments","_jsxs","Stack","gap","component","noValidate","autoComplete","children","_jsx","direction","alignItems","justifyContent","Typography","color","sx","fontWeight","length","maxWidth","my","Autocomplete","disablePortal","options","_toConsumableArray","map","fullWidth","getOptionLabel","t","_themes$find","getOptionDisabled","renderInput","params","TextField","_objectSpread","label","placeholder","InputLabelProps","shrink","variant","size","onChange","_event","margin","autoFocus","Box","LoadingButton","disabled","Object","keys","loadingPosition","startIcon","SaveIcon","srcDoc","getGeneratedBlobHtml","replace","head","style","width","height","border","borderRadius","background","makeId","undefined","result","characters","counter","charAt","Math","floor","random","html","css","pretty","ocd","delay","ms","Promise","res","setTimeout","getBodyObj","_document$getElementB","tmp","editable","document","createElement","innerHTML","getElementById","querySelectorAll","elm","key","dataset","remove","outerHTML","replaceAll"],"sourceRoot":""}